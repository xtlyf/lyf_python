__author__ = 'lyf'
import random,time,queue
from multiprocessing.managers import BaseManager
#send task queue
task_queue=queue.Queue()
#receive result queue
result_queue=queue.Queue()
class QueueManager(BaseManager):
    pass

# login two queue to internet, callable cennect to queue:
#wrong
#QueueManager.register('get_task_queue', callable=lambda: task_queue)
#QueueManager.register('get_result_queue', callable=lambda: result_queue)
#
def return_task_queue():
    global task_queue
    return task_queue

def return_result_queue():
    global result_queue
    return result_queue
def test():

          QueueManager.register('get_task_queue', callable=return_task_queue)
          QueueManager.register('get_result_queue', callable=return_result_queue)
           #
          manager = QueueManager(address=('127.0.0.1', 5000), authkey=b'abc')
# start Queue:
          manager.start()
#
          task = manager.get_task_queue()
          result = manager.get_result_queue()
# some tasks
          for i in range(10):
              n = random.randint(0, 10000)
              print('Put task %d...' % n)
              task.put(n)
# read the result from result queue
          print('Try get results...')
          for i in range(10):
              r = result.get(timeout=10)
              print('Result: %s' % r)
# close:
          manager.shutdown()
          print('master exit.')
if __name__ == '__main__':
    #freeze_support()
    test()
